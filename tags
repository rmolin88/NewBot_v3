!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ATXMEGA_H	./atxmega/include/atxmega.h	2;"	d
BSCALE	./atxmega/src/uart.c	9;"	d	file:
BSEL	./atxmega/src/uart.c	8;"	d	file:
BufferToggle	./remote/src/Main.cpp	/^class BufferToggle$/;"	c	file:
CHAR_SIZE	./odroid/include/Odroid.h	11;"	d
Clk32MhzInit	./atxmega/src/sys_clk.c	/^void Clk32MhzInit()$/;"	f
F_CPU	./atxmega/include/atxmega.h	10;"	d
ISR	./atxmega/src/uart.c	/^ISR(USARTC1_RXC_vect)$/;"	f
LOOP_FREQ_AU_MS	./odroid/src/Main.cpp	3;"	d	file:
LOOP_FREQ_RM_MS	./odroid/src/Main.cpp	4;"	d	file:
ODROID_H_	./odroid/include/Odroid.h	2;"	d
ParseSerialDataRecvd	./odroid/src/Main.cpp	/^static int ParseSerialDataRecvd(const char *pData)$/;"	f	file:
PrintMsg	./odroid/src/Main.cpp	/^int PrintMsg(const char *pMsg, const char *pThreadName)$/;"	f
RET_SUCCESS	./odroid/include/SerialXmega.h	7;"	d
SERIAL_XMEGA_H_	./odroid/include/SerialXmega.h	2;"	d
SYS_CLK_H	./atxmega/include/sys_clk.h	2;"	d
SerialCommunication	./odroid/src/SerialXmega.cpp	/^int SerialCommunication(LibSerial::SerialStream& S)$/;"	f
SerialInit	./odroid/src/SerialXmega.cpp	/^int SerialInit(LibSerial::SerialStream& S, const char *pDevice)$/;"	f
UARTInit	./atxmega/src/uart.c	/^void UARTInit()$/;"	f
UARTTrans	./atxmega/src/uart.c	/^void UARTTrans(char cData)$/;"	f
UART_H	./atxmega/include/uart.h	2;"	d
WDTDisble	./atxmega/src/sys_clk.c	/^void WDTDisble()$/;"	f
__AVR_ATxmega128A4U__	./atxmega/include/atxmega.h	6;"	d
__OPTIMIZE__	./atxmega/include/atxmega.h	14;"	d
cDataWrite	./atxmega/src/atxmega.c	/^volatile char cDataWrite[256];$/;"	v
gbXbeeData	./odroid/src/Main.cpp	/^std::atomic_bool gbXbeeData;$/;"	v
gbXmegaData	./odroid/src/Main.cpp	/^std::atomic_bool gbXmegaData;$/;"	v
gcXbeeDataRx	./odroid/src/Main.cpp	/^char gcXbeeDataRx[CHAR_SIZE] = {0};$/;"	v
gcXbeeDataTx	./odroid/src/Main.cpp	/^char gcXbeeDataTx[CHAR_SIZE] = {0};$/;"	v
gcXmegaDataRx	./odroid/src/Main.cpp	/^char gcXmegaDataRx[CHAR_SIZE] = {0};$/;"	v
gcXmegaDataTx	./odroid/src/Main.cpp	/^char gcXmegaDataTx[CHAR_SIZE] = {0};$/;"	v
gui_running	./odroid/src/thread.cpp	/^std::atomic<bool> gui_running;$/;"	v
gui_thread	./odroid/src/thread.cpp	/^void gui_thread()$/;"	f
mMutex	./odroid/src/Main.cpp	/^std::mutex mMutex;$/;"	v
main	./atxmega/src/atxmega.c	/^int main(void)$/;"	f
main	./odroid/src/Main.cpp	/^int main ( int argc, char **argv ) $/;"	f
main	./odroid/src/thread.cpp	/^int main()$/;"	f
main	./remote/src/Main.cpp	/^int main(int argc, char **argv)$/;"	f
message	./odroid/src/thread.cpp	/^void message()$/;"	f
off	./remote/src/Main.cpp	/^        void off(void)$/;"	f	class:BufferToggle
on	./remote/src/Main.cpp	/^        void on(void)$/;"	f	class:BufferToggle
one_off	./odroid/src/thread.cpp	/^void one_off()$/;"	f
pDataReceived	./atxmega/src/atxmega.c	/^volatile char *pDataReceived = cDataWrite;$/;"	v
t	./remote/src/Main.cpp	/^        struct termios t;$/;"	m	class:BufferToggle	typeref:struct:BufferToggle::termios	file:
tasks	./odroid/src/thread.cpp	/^std::deque<std::packaged_task<void()>> tasks;$/;"	v
tasks_mutex	./odroid/src/thread.cpp	/^std::mutex tasks_mutex;$/;"	v
